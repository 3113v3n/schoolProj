{"ast":null,"code":"import _classCallCheck from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/src/views/Allocation/allocations.jsx\";\nimport React from \"react\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\"; ////////////////////////////\n\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Edit from \"@material-ui/icons/Edit\";\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  tableUpgradeWrapper: {\n    display: \"block\",\n    width: \"100%\",\n    overflowX: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    MsOverflowStyle: \"-ms-autohiding-scrollbar\"\n  },\n  table: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    marginBottom: \"1rem\",\n    backgroundColor: \"transparent\",\n    borderCollapse: \"collapse\",\n    display: \"table\",\n    borderSpacing: \"2px\",\n    borderColor: \"grey\",\n    \"& thdead tr th\": {\n      fontSize: \"1.063rem\",\n      padding: \"12px 8px\",\n      verticalAlign: \"middle\",\n      fontWeight: \"300\",\n      borderTopWidth: \"0\",\n      borderBottom: \"1px solid rgba(0, 0, 0, 0.06)\",\n      textAlign: \"inherit\"\n    },\n    \"& tbody tr td\": {\n      padding: \"12px 8px\",\n      verticalAlign: \"middle\",\n      borderTop: \"1px solid rgba(0, 0, 0, 0.06)\"\n    },\n    \"& td, & th\": {\n      display: \"table-cell\"\n    }\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  left: {\n    flexDirection: \"row\"\n  }\n}; //function UpgradeToPro(props)\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          data = _this$props.data;\n      return React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Student Table\"), React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"students \")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.tableUpgradeWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"StudentName\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Supervisor\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"ProjCode\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Date-Registered\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"allocations\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, data.map(function (Students) {\n        return React.createElement(\"tr\", {\n          className: classes.center,\n          key: Students.studentName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, Students.studentName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, Students.supervisor), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, Students.projectCode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, Students.dateRegistered), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Unallocated\"), React.createElement(\"td\", {\n          className: classes.left,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          id: \"tooltip-top\",\n          title: \"Edit Task\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Edit\",\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(Edit, {\n          className: classes.tableActionButtonIcon + \" \" + classes.edit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          id: \"tooltip-top-start\",\n          title: \"Remove\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Close\",\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Close, {\n          className: classes.tableActionButtonIcon + \" \" + classes.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        })))));\n      })))))), React.createElement(Button, {\n        color: \"info\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"New Allocation\")));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nvar allocations =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(allocations, _React$Component2);\n\n  function allocations(props) {\n    var _this;\n\n    _classCallCheck(this, allocations);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(allocations).call(this, props));\n    _this.state = {\n      studentName: \"Michael Scorfield\",\n      supervisor: \"Link\",\n      proj_Code: \" KCA 3019\",\n      myDate: \"2019-03-12\",\n      isLoading: false,\n      data: [],\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(allocations, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchStudents();\n    }\n  }, {\n    key: \"fetchStudents\",\n    value: function fetchStudents() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:80/students.json\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          data: result.Students,\n          isLoading: true\n        });\n      }, function (error) {\n        _this2.setState({\n          isLoading: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          data = _this$state.data,\n          error = _this$state.error;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Error:\", error.message);\n      } else if (!isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \" Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(List, {\n          classes: classes,\n          data: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return allocations;\n}(React.Component);\n\nexport default withStyles(styles)(allocations);","map":{"version":3,"sources":["/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/src/views/Allocation/allocations.jsx"],"names":["React","withStyles","Close","GridItem","GridContainer","Card","CardHeader","CardBody","Button","Tooltip","IconButton","Edit","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","tableUpgradeWrapper","display","width","overflowX","WebkitOverflowScrolling","MsOverflowStyle","table","maxWidth","backgroundColor","borderCollapse","borderSpacing","borderColor","padding","verticalAlign","borderTopWidth","borderBottom","textAlign","borderTop","center","left","flexDirection","List","props","classes","data","map","Students","studentName","supervisor","projectCode","dateRegistered","tooltip","tableActionButton","tableActionButtonIcon","edit","close","Component","allocations","state","proj_Code","myDate","isLoading","error","fetchStudents","fetch","then","res","json","result","setState","message"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\n////////////////////////////\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  tableUpgradeWrapper: {\n    display: \"block\",\n    width: \"100%\",\n    overflowX: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    MsOverflowStyle: \"-ms-autohiding-scrollbar\"\n  },\n  table: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    marginBottom: \"1rem\",\n    backgroundColor: \"transparent\",\n    borderCollapse: \"collapse\",\n    display: \"table\",\n    borderSpacing: \"2px\",\n    borderColor: \"grey\",\n    \"& thdead tr th\": {\n      fontSize: \"1.063rem\",\n      padding: \"12px 8px\",\n      verticalAlign: \"middle\",\n      fontWeight: \"300\",\n      borderTopWidth: \"0\",\n      borderBottom: \"1px solid rgba(0, 0, 0, 0.06)\",\n      textAlign: \"inherit\"\n    },\n    \"& tbody tr td\": {\n      padding: \"12px 8px\",\n      verticalAlign: \"middle\",\n      borderTop: \"1px solid rgba(0, 0, 0, 0.06)\"\n    },\n    \"& td, & th\": {\n      display: \"table-cell\"\n    }\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  left: {\n    flexDirection: \"row\"\n  }\n};\n\n//function UpgradeToPro(props)\nclass List extends React.Component {\n  render() {\n    const { classes, data } = this.props;\n    return (\n      <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Student Table</h4>\n              <p className={classes.cardCategoryWhite}>students </p>\n            </CardHeader>\n            <CardBody>\n              <div className={classes.tableUpgradeWrapper}>\n                <table className={classes.table}>\n                  <thead>\n                    <tr>\n                      <th>StudentName</th>\n                      <th>Supervisor</th>\n                      <th>ProjCode</th>\n                      <th>Date-Registered</th>\n                      <th>allocations</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.map(Students => (\n                      <tr className={classes.center} key={Students.studentName}>\n                        <td>{Students.studentName}</td>\n                        <td>{Students.supervisor}</td>\n                        <td>{Students.projectCode}</td>\n                        <td>{Students.dateRegistered}</td>\n                        <td>Unallocated</td>\n                        <td className={classes.left}>\n                          <Tooltip\n                            id=\"tooltip-top\"\n                            title=\"Edit Task\"\n                            placement=\"top\"\n                            classes={{ tooltip: classes.tooltip }}\n                          >\n                            <IconButton\n                              aria-label=\"Edit\"\n                              className={classes.tableActionButton}\n                            >\n                              <Edit\n                                className={\n                                  classes.tableActionButtonIcon +\n                                  \" \" +\n                                  classes.edit\n                                }\n                              />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip\n                            id=\"tooltip-top-start\"\n                            title=\"Remove\"\n                            placement=\"top\"\n                            classes={{ tooltip: classes.tooltip }}\n                          >\n                            <IconButton\n                              aria-label=\"Close\"\n                              className={classes.tableActionButton}\n                            >\n                              <Close\n                                className={\n                                  classes.tableActionButtonIcon +\n                                  \" \" +\n                                  classes.close\n                                }\n                              />\n                            </IconButton>\n                          </Tooltip>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </CardBody>\n          </Card>\n          <Button color=\"info\" round>\n            New Allocation\n          </Button>\n        </GridItem>\n      </GridContainer>\n    );\n  }\n}\n\nclass allocations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studentName: \"Michael Scorfield\",\n      supervisor: \"Link\",\n      proj_Code: \" KCA 3019\",\n      myDate: \"2019-03-12\",\n      isLoading: false,\n      data: [],\n      error: null\n    };\n  }\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  fetchStudents() {\n    fetch(\"http://localhost:80/students.json\")\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            data: result.Students,\n            isLoading: true\n          });\n        },\n        error => {\n          this.setState({\n            isLoading: true,\n            error\n          });\n        }\n      );\n  }\n  render() {\n    const { classes } = this.props;\n    const { isLoading, data, error } = this.state;\n    if (error) {\n      return (\n        <div>\n          Error:\n          {error.message}\n        </div>\n      );\n    } else if (!isLoading) {\n      return <div> Loading...</div>;\n    } else {\n      return (\n        <div>\n          <List classes={classes} data={data} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(allocations);\n"]},"metadata":{},"sourceType":"module"}