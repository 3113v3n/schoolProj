{"ast":null,"code":"import _defineProperty from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/src/components/Sidebar/Sidebar.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\nimport Supervisor from \"../../views/Forms/Supervisors/Supervisor\";\nvar role = \"Admin\";\n\nvar Sidebar = function Sidebar(_ref) {\n  var props = _extends({}, _ref);\n\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var classes = props.classes,\n      color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes;\n  var filterRoutes = routes.filter(function (el) {\n    if (role == \"Supervisor\") {\n      //change route acording to Role\n      return el.supervisor === 1;\n    }\n\n    if (role == \"Admin\") {\n      return el.admin === 1;\n    }\n  });\n  var links = React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, filterRoutes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses;\n    if (prop.invisible) return null; //if (!prop.supervisor ) return activeRoute();\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n    } else {\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.layout + prop.path)));\n    }\n\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path)));\n    return React.createElement(NavLink, {\n      to: prop.layout + prop.path,\n      className: activePro + classes.item,\n      activeClassName: \"active\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      className: classes.itemLink + listItemClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, typeof prop.icon === \"string\" ? React.createElement(Icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, prop.icon) : React.createElement(prop.icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: props.rtlActive ? prop.rtlName : prop.name,\n      className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n      disableTypography: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }));\n  var brand = React.createElement(\"div\", {\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://www.creative-tim.com\",\n    className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), logoText));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }) : React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }) : null)), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }) : null)));\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(sidebarStyle)(Sidebar);","map":{"version":3,"sources":["/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/src/components/Sidebar/Sidebar.jsx"],"names":["React","classNames","PropTypes","NavLink","withStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","sidebarStyle","Supervisor","role","Sidebar","props","activeRoute","routeName","location","pathname","indexOf","classes","color","logo","image","logoText","routes","filterRoutes","filter","el","supervisor","admin","links","list","map","prop","key","activePro","listItemClasses","invisible","path","layout","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\n\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\nimport Supervisor from \"../../views/Forms/Supervisors/Supervisor\";\nconst role = \"Admin\";\n\nconst Sidebar = ({ ...props }) => {\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n\n  const { classes, color, logo, image, logoText, routes } = props;\n  const filterRoutes = routes.filter(function(el) {\n    if (role == \"Supervisor\") {\n      //change route acording to Role\n      return el.supervisor === 1;\n    } if(role==\"Admin\") {\n      return el.admin === 1;\n    }\n  });\n  let links = (\n    <List className={classes.list}>\n      {filterRoutes.map((prop, key) => {\n        let activePro = \" \";\n        let listItemClasses;\n        if (prop.invisible) return null;\n        //if (!prop.supervisor ) return activeRoute();\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  let brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"https://www.creative-tim.com\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(sidebarStyle)(Sidebar);\n"]},"metadata":{},"sourceType":"module"}