{"ast":null,"code":"import _defineProperty from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/src/components/Sidebar/Sidebar.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\n\nvar Sidebar = function Sidebar(_ref) {\n  var props = _extends({}, _ref);\n\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n\n  if (props.sidebar) {\n    return;\n    var classes = props.classes,\n        color = props.color,\n        logo = props.logo,\n        image = props.image,\n        logoText = props.logoText,\n        routes = props.routes;\n    var links = React.createElement(List, {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, routes.map(function (prop, key) {\n      var activePro = \" \";\n      var listItemClasses;\n\n      if (prop.path === \"/upgrade-to-pro\") {\n        activePro = classes.activePro + \" \";\n        listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n      } else {\n        listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.layout + prop.path)));\n      }\n\n      var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path)));\n      return React.createElement(NavLink, {\n        to: prop.layout + prop.path,\n        className: activePro + classes.item,\n        activeClassName: \"active\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        className: classes.itemLink + listItemClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, typeof prop.icon === \"string\" ? React.createElement(Icon, {\n        className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, prop.icon) : React.createElement(prop.icon, {\n        className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: props.rtlActive ? prop.rtlName : prop.name,\n        className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n        disableTypography: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    }));\n    var brand = React.createElement(\"div\", {\n      className: classes.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.creative-tim.com\",\n      className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.logoImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      className: classes.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), logoText));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      mdUp: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      variant: \"temporary\",\n      anchor: props.rtlActive ? \"left\" : \"right\",\n      open: props.open,\n      classes: {\n        paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n      },\n      onClose: props.handleDrawerToggle,\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, brand, React.createElement(\"div\", {\n      className: classes.sidebarWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }) : React.createElement(AdminNavbarLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), links), image !== undefined ? React.createElement(\"div\", {\n      className: classes.background,\n      style: {\n        backgroundImage: \"url(\" + image + \")\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : null)), React.createElement(Hidden, {\n      smDown: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      anchor: props.rtlActive ? \"right\" : \"left\",\n      variant: \"permanent\",\n      open: true,\n      classes: {\n        paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, brand, React.createElement(\"div\", {\n      className: classes.sidebarWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, links), image !== undefined ? React.createElement(\"div\", {\n      className: classes.background,\n      style: {\n        backgroundImage: \"url(\" + image + \")\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : null)));\n  }\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(sidebarStyle)(Sidebar);","map":{"version":3,"sources":["/home/h4wk3y3/Desktop/backUp/new/material-dashboard-react-v1.6.0/src/components/Sidebar/Sidebar.jsx"],"names":["React","classNames","PropTypes","NavLink","withStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","sidebarStyle","Sidebar","props","activeRoute","routeName","location","pathname","indexOf","sidebar","classes","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\n\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\n\nconst Sidebar = ({ ...props }) => {\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n  if(props.sidebar){\n    return\n    const { classes, color, logo, image, logoText, routes } = props;\n    let links = (\n      <List className={classes.list}>\n        {routes.map((prop, key) => {\n          var activePro = \" \";\n          var listItemClasses;\n          if (prop.path === \"/upgrade-to-pro\") {\n            activePro = classes.activePro + \" \";\n            listItemClasses = classNames({\n              [\" \" + classes[color]]: true\n            });\n          } else {\n            listItemClasses = classNames({\n              [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n            });\n          }\n          const whiteFontClasses = classNames({\n            [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n          });\n          return (\n            <NavLink\n              to={prop.layout + prop.path}\n              className={activePro + classes.item}\n              activeClassName=\"active\"\n              key={key}\n            >\n              <ListItem button className={classes.itemLink + listItemClasses}>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\n                      [classes.itemIconRTL]: props.rtlActive\n                    })}\n                  >\n                    {prop.icon}\n                  </Icon>\n                ) : (\n                  <prop.icon\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\n                      [classes.itemIconRTL]: props.rtlActive\n                    })}\n                  />\n                )}\n                <ListItemText\n                  primary={props.rtlActive ? prop.rtlName : prop.name}\n                  className={classNames(classes.itemText, whiteFontClasses, {\n                    [classes.itemTextRTL]: props.rtlActive\n                  })}\n                  disableTypography={true}\n                />\n              </ListItem>\n            </NavLink>\n          );\n        })}\n      </List>\n    );\n    let brand = (\n      <div className={classes.logo}>\n        <a\n          href=\"https://www.creative-tim.com\"\n          className={classNames(classes.logoLink, {\n            [classes.logoLinkRTL]: props.rtlActive\n          })}\n        >\n          <div className={classes.logoImage}>\n            <img src={logo} alt=\"logo\" className={classes.img} />\n          </div>\n          {logoText}\n        </a>\n      </div>\n    );\n    return (\n      <div>\n        <Hidden mdUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor={props.rtlActive ? \"left\" : \"right\"}\n            open={props.open}\n            classes={{\n              paper: classNames(classes.drawerPaper, {\n                [classes.drawerPaperRTL]: props.rtlActive\n              })\n            }}\n            onClose={props.handleDrawerToggle}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {brand}\n            <div className={classes.sidebarWrapper}>\n              {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n              {links}\n            </div>\n            {image !== undefined ? (\n              <div\n                className={classes.background}\n                style={{ backgroundImage: \"url(\" + image + \")\" }}\n              />\n            ) : null}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            anchor={props.rtlActive ? \"right\" : \"left\"}\n            variant=\"permanent\"\n            open\n            classes={{\n              paper: classNames(classes.drawerPaper, {\n                [classes.drawerPaperRTL]: props.rtlActive\n              })\n            }}\n          >\n            {brand}\n            <div className={classes.sidebarWrapper}>{links}</div>\n            {image !== undefined ? (\n              <div\n                className={classes.background}\n                style={{ backgroundImage: \"url(\" + image + \")\" }}\n              />\n            ) : null}\n          </Drawer>\n        </Hidden>\n      </div>\n    );\n  }\n\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(sidebarStyle)(Sidebar);\n"]},"metadata":{},"sourceType":"module"}